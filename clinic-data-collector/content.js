// Content script –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ fetch –∑–∞–ø—Ä–æ—Å–æ–≤
(function() {
  try {
    console.log('[Content Script] Content script –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');

    // –í–Ω–µ–¥—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ fetch –∑–∞–ø—Ä–æ—Å–æ–≤
    const injectedScript = document.createElement('script');
    injectedScript.src = (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.getURL) ? chrome.runtime.getURL('injected.js') : 'injected.js';
    injectedScript.onload = function() {
      console.log('[Content Script] injected.js –∑–∞–≥—Ä—É–∂–µ–Ω');
      this.remove();
    };
    (document.head || document.documentElement).appendChild(injectedScript);

    // –í–Ω–µ–¥—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    const autoScrollScript = document.createElement('script');
    autoScrollScript.src = (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.getURL) ? chrome.runtime.getURL('auto-scroll.js') : 'auto-scroll.js';
    autoScrollScript.onload = function() {
      this.remove();
    };
    (document.head || document.documentElement).appendChild(autoScrollScript);

    // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    window.addEventListener('message', function(event) {
      if (event.source !== window) return;
      if (!event.data) return;
      try {
        console.log('[Content Script] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', event.data.type, event.data);
        if (event.data.type === 'CLINIC_DATA_INTERCEPTED') {
          console.log(`[Content Script] üì® –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç injected.js: ${event.data.clinics.length} –∫–∞—Ä—Ç–æ—á–µ–∫`);
          console.log(`[DEBUG] –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:`, event.data.clinics);
          
          if (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.sendMessage) {
            console.log(`[DEBUG] üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${event.data.clinics.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ background.js`);
            chrome.runtime.sendMessage({
              action: 'addClinicData',
              data: event.data.clinics,
              url: event.data.url,
              timestamp: event.data.timestamp
            }, (response) => {
              console.log('[Content Script] ‚úÖ –û—Ç–≤–µ—Ç –æ—Ç background.js:', response);
            });
          } else {
            console.warn('[Content Script] ‚ùå chrome.runtime.sendMessage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ background.js');
          }
        } else if (event.data.type === 'AUTO_SCROLL_STATUS') {
          if (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.sendMessage) {
            chrome.runtime.sendMessage({
              action: 'autoScrollStatus',
              data: event.data
            });
          }
        }
      } catch (err) {
        console.error('[Content Script] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', err);
      }
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç sidebar –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
    if (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.onMessage) {
      chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
        if (message.action === 'startAutoScroll') {
          window.postMessage({ 
            type: 'START_AUTO_SCROLL',
            scrollSpeed: message.scrollSpeed || 3,
            maxScrolls: message.maxScrolls || 50
          }, '*');
          sendResponse({ status: 'started' });
        } else if (message.action === 'stopAutoScroll') {
          window.postMessage({ type: 'STOP_AUTO_SCROLL' }, '*');
          sendResponse({ status: 'stopped' });
        } else if (message.action === 'copyToClipboard') {
          copyDataToClipboard(message.content, message.filename);
          sendResponse({ status: 'copied' });
        }
        return true;
      });
    } else {
      console.warn('[Content Script] chrome.runtime.onMessage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ');
    }

    // –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    function copyDataToClipboard(content, filename) {
      try {
        const textarea = document.createElement('textarea');
        textarea.value = content;
        textarea.style.position = 'fixed';
        textarea.style.opacity = '0';
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        showExportNotification(filename);
        console.log(`–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞. –§–∞–π–ª: ${filename}`);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ –±—É—Ñ–µ—Ä:', error);
      }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —ç–∫—Å–ø–æ—Ä—Ç–µ
    function showExportNotification(filename) {
      const notification = document.createElement('div');
      notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #4CAF50;
        color: white;
        padding: 10px 20px;
        border-radius: 4px;
        z-index: 9999;
        font-size: 16px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);`;
      notification.textContent = `–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã: ${filename}`;
      document.body.appendChild(notification);
      setTimeout(() => notification.remove(), 2000);
    }
  } catch (fatalError) {
    console.error('[Content Script] –§–ê–¢–ê–õ–¨–ù–ê–Ø –û–®–ò–ë–ö–ê:', fatalError);
  }
})();
